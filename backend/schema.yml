openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /event/{event_id}/image/:
    get:
      operationId: event_image_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      - in: path
        name: image_id
        schema:
          type: string
        description: Image ID
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: event_image_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: event_image_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      - in: path
        name: image_id
        schema:
          type: string
        description: Image ID
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /event/{event_id}/image/{image_id}/:
    get:
      operationId: event_image_retrieve_2
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      - in: path
        name: image_id
        schema:
          type: string
        description: Image ID
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: event_image_update_2
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      - in: path
        name: image_id
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: event_image_destroy_2
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        description: Event ID
        required: true
      - in: path
        name: image_id
        schema:
          type: string
        description: Image ID
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /event/{event_id}/image/count/:
    get:
      operationId: event_image_count_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/{event_id}/image/highest_score/:
    get:
      operationId: event_image_highest_score_retrieve
      description: |-
        Retrieves the image with the highest score for a given event.

        Args:
            request: The HTTP request object.
            event_id: The UUID of the event.

        Returns:
            Response: A FileResponse containing the image or an error message.
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/{event_id}/invite/{invite_link}/accept/:
    put:
      operationId: event_invite_accept_update
      description: Changes the 'accepted' status of an EventUser to True.
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      - in: path
        name: invite_link
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/{event_id}/invite/{invite_link}/decline/:
    delete:
      operationId: event_invite_decline_destroy
      description: Removes a user from an event.
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      - in: path
        name: invite_link
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /event/{event_id}/invite/link/:
    get:
      operationId: event_invite_link_retrieve
      description: |-
        Generates an obfuscated invite link for an event.

        Args:
            request: The HTTP request object.
            event_id: The ID of the event to generate the link for.

        Returns:
            Response: A JSON response containing the obfuscated invite link or an error message.
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/{event_id}/invite/user/:
    post:
      operationId: event_invite_user_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/content/:
    get:
      operationId: event_content_list
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventContent'
          description: ''
    post:
      operationId: event_content_create
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventContent'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventContent'
          description: ''
  /event/content/{event_id}/:
    get:
      operationId: event_content_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventContent'
          description: ''
    put:
      operationId: event_content_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventContent'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventContent'
          description: ''
    patch:
      operationId: event_content_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventContent'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventContent'
          description: ''
    delete:
      operationId: event_content_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /event/create/:
    post:
      operationId: event_create_create
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event/invite/link/decode/{invite_link}/:
    get:
      operationId: event_invite_link_decode_retrieve
      description: |-
        Resolves an obfuscated invite link to get the event ID.

        Args:
            request: The HTTP request object.
            encoded_event_id: The obfuscated event ID from the invite link.

        Returns:
            Response: A JSON response containing the event ID or an error message.
      parameters:
      - in: path
        name: invite_link
        schema:
          type: string
        required: true
      tags:
      - event
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /event_users/:
    get:
      operationId: event_users_list
      tags:
      - event_users
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventUser'
          description: ''
    post:
      operationId: event_users_create
      tags:
      - event_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventUser'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUser'
          description: ''
  /event_users/{event_id}/:
    get:
      operationId: event_users_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event_users
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUser'
          description: ''
    put:
      operationId: event_users_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventUser'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUser'
          description: ''
    patch:
      operationId: event_users_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventUser'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUser'
          description: ''
    delete:
      operationId: event_users_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event_users
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /scored_by/:
    get:
      operationId: scored_by_list
      tags:
      - scored_by
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScoredBy'
          description: ''
    post:
      operationId: scored_by_create
      tags:
      - scored_by
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoredBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScoredBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScoredBy'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoredBy'
          description: ''
  /scored_by/{id}/:
    get:
      operationId: scored_by_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scored by.
        required: true
      tags:
      - scored_by
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoredBy'
          description: ''
    put:
      operationId: scored_by_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scored by.
        required: true
      tags:
      - scored_by
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoredBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScoredBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScoredBy'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoredBy'
          description: ''
    patch:
      operationId: scored_by_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scored by.
        required: true
      tags:
      - scored_by
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScoredBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScoredBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScoredBy'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoredBy'
          description: ''
    delete:
      operationId: scored_by_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scored by.
        required: true
      tags:
      - scored_by
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /user/:
    get:
      operationId: user_list
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/{user_id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /user/{user_id}/events/:
    get:
      operationId: user_events_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/{user_id}/pending_events_full/:
    get:
      operationId: user_pending_events_full_retrieve
      description: Retrieves a list of Event objects where the user is invited but
        has not accepted.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/from_email/{email}/:
    get:
      operationId: user_from_email_retrieve
      description: |-
        Retrieves the user_id associated with a given email address.

        Args:
            request: The HTTP request object.
            email: The email address to search for.

        Returns:
            Response: A JSON response containing the user_id or an error message.
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/from_fire_base/{firebase_id}/:
    get:
      operationId: user_from_fire_base_retrieve
      description: |-
        Retrieves the user_id associated with a given firebase_id.

        Args:
            request: The HTTP request object.
            firebase_id: The firebase_id to search for.

        Returns:
            Response: A JSON response containing the user_id or an error message.
      parameters:
      - in: path
        name: firebase_id
        schema:
          type: string
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user_settings/:
    get:
      operationId: user_settings_list
      tags:
      - user_settings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSettings'
          description: ''
    post:
      operationId: user_settings_create
      tags:
      - user_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSettings'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
  /user_settings/{user}/:
    get:
      operationId: user_settings_retrieve
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
        description: A unique value identifying this user settings.
        required: true
      tags:
      - user_settings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
    put:
      operationId: user_settings_update
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
        description: A unique value identifying this user settings.
        required: true
      tags:
      - user_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSettings'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
    patch:
      operationId: user_settings_partial_update
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
        description: A unique value identifying this user settings.
        required: true
      tags:
      - user_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
    delete:
      operationId: user_settings_destroy
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
        description: A unique value identifying this user settings.
        required: true
      tags:
      - user_settings
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Event:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          readOnly: true
        event_name:
          type: string
          maxLength: 255
        owner:
          type: string
          format: uuid
          writeOnly: true
      required:
      - event_id
      - event_name
      - owner
    EventContent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          $ref: '#/components/schemas/Event'
        image:
          $ref: '#/components/schemas/Image'
      required:
      - event
      - id
      - image
    EventUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          $ref: '#/components/schemas/Event'
        user:
          $ref: '#/components/schemas/User'
        accepted:
          type: boolean
      required:
      - event
      - id
      - user
    Image:
      type: object
      properties:
        image_id:
          type: string
          format: uuid
          readOnly: true
        file_name:
          type: string
          maxLength: 50
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - image_id
    PatchedEventContent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          $ref: '#/components/schemas/Event'
        image:
          $ref: '#/components/schemas/Image'
    PatchedEventUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          $ref: '#/components/schemas/Event'
        user:
          $ref: '#/components/schemas/User'
        accepted:
          type: boolean
    PatchedScoredBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          $ref: '#/components/schemas/Image'
        user:
          $ref: '#/components/schemas/User'
    PatchedUser:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        firebase_id:
          type: string
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 30
        profile_picture:
          type: string
          nullable: true
          maxLength: 50
    PatchedUserSettings:
      type: object
      properties:
        user:
          type: string
          format: uuid
        dark_mode:
          type: boolean
    ScoredBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          $ref: '#/components/schemas/Image'
        user:
          $ref: '#/components/schemas/User'
      required:
      - id
      - image
      - user
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        firebase_id:
          type: string
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 30
        profile_picture:
          type: string
          nullable: true
          maxLength: 50
      required:
      - display_name
      - email
      - firebase_id
      - user_id
    UserSettings:
      type: object
      properties:
        user:
          type: string
          format: uuid
        dark_mode:
          type: boolean
      required:
      - user
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
